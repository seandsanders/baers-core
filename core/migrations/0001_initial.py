# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0005_alter_user_last_login_null'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApiKey',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('keyID', models.IntegerField()),
                ('vCode', models.CharField(max_length=100)),
                ('accountWide', models.BooleanField(default=True)),
                ('valid', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('accessMask', models.CharField(max_length=20, null=True)),
                ('expiration', models.DateTimeField(null=True)),
                ('accountPaidUntil', models.DateTimeField(null=True)),
                ('accountCreateDate', models.DateTimeField(null=True)),
                ('accountLogonCount', models.IntegerField(null=True)),
                ('accountLogonMinutes', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CacheTimer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('callName', models.CharField(max_length=100)),
                ('cachedUntil', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('charID', models.IntegerField()),
                ('charName', models.CharField(max_length=200)),
                ('corpID', models.IntegerField()),
                ('corpName', models.CharField(max_length=200)),
                ('allianceID', models.IntegerField()),
                ('allianceName', models.CharField(max_length=200)),
                ('dateOfBirth', models.DateTimeField(null=True)),
                ('race', models.CharField(max_length=10, null=True)),
                ('gender', models.CharField(max_length=6, null=True)),
                ('walletBalance', models.IntegerField(null=True)),
                ('jumpFatigue', models.DateTimeField(null=True)),
                ('jumpActivation', models.DateTimeField(null=True)),
                ('skillInTrainingID', models.IntegerField(null=True)),
                ('skillInTrainingFinishes', models.DateTimeField(null=True)),
                ('activeShip', models.IntegerField(null=True)),
                ('location', models.CharField(max_length=20, null=True)),
                ('api', models.ForeignKey(to='core.ApiKey')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterAsset',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('itemID', models.IntegerField()),
                ('locationID', models.IntegerField()),
                ('typeID', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('flag', models.IntegerField()),
                ('singleton', models.IntegerField()),
                ('rawQuantity', models.IntegerField(null=True)),
                ('owner', models.ForeignKey(to='core.Character')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterContact',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('contactID', models.IntegerField()),
                ('contactName', models.CharField(max_length=100)),
                ('inWatchlist', models.BooleanField()),
                ('standing', models.IntegerField()),
                ('owner', models.ForeignKey(to='core.Character')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterContract',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('contractID', models.IntegerField()),
                ('issuerID', models.IntegerField()),
                ('issuerCorpID', models.IntegerField()),
                ('assigneeID', models.IntegerField()),
                ('acceptorID', models.IntegerField()),
                ('startStationID', models.IntegerField()),
                ('endStationID', models.IntegerField()),
                ('type', models.CharField(max_length=20)),
                ('status', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=100)),
                ('forCorp', models.BooleanField()),
                ('availability', models.CharField(max_length=10)),
                ('dateIssued', models.DateTimeField()),
                ('dateExpired', models.DateTimeField()),
                ('dateAccepted', models.DateTimeField(null=True)),
                ('numDays', models.IntegerField()),
                ('dateCompleted', models.DateTimeField(null=True)),
                ('price', models.FloatField()),
                ('reward', models.FloatField()),
                ('collateral', models.FloatField()),
                ('buyout', models.FloatField()),
                ('volume', models.FloatField()),
                ('owner', models.ForeignKey(to='core.Character')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterImplant',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('typeID', models.IntegerField()),
                ('owner', models.ForeignKey(to='core.Character')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterKill',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('killID', models.IntegerField()),
                ('solarSystemID', models.IntegerField()),
                ('killTime', models.DateTimeField()),
                ('victimAllianceID', models.IntegerField()),
                ('victimAllianceName', models.CharField(max_length=100)),
                ('victimCharacterID', models.IntegerField()),
                ('victimCharacterName', models.CharField(max_length=100)),
                ('victimCorporationID', models.IntegerField()),
                ('victimCorporationName', models.CharField(max_length=100)),
                ('victimDamageTaken', models.IntegerField()),
                ('victimShipTypeID', models.IntegerField()),
                ('owner', models.ForeignKey(to='core.Character')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterMail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('messageID', models.IntegerField()),
                ('senderID', models.IntegerField()),
                ('sentDate', models.DateTimeField()),
                ('title', models.CharField(max_length=200)),
                ('toCorpOrAllianceID', models.CharField(max_length=200)),
                ('toCharacterIDs', models.CharField(max_length=200)),
                ('toListID', models.CharField(max_length=200)),
                ('owner', models.ForeignKey(to='core.Character')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterMarketOrder',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('orderID', models.IntegerField()),
                ('charID', models.IntegerField()),
                ('stationID', models.IntegerField()),
                ('volEntered', models.IntegerField()),
                ('volRemaining', models.IntegerField()),
                ('minVolume', models.IntegerField()),
                ('orderState', models.IntegerField()),
                ('typeID', models.IntegerField()),
                ('range', models.IntegerField()),
                ('accountKey', models.IntegerField()),
                ('duration', models.IntegerField()),
                ('escrow', models.FloatField()),
                ('price', models.FloatField()),
                ('bid', models.BooleanField()),
                ('issued', models.DateTimeField()),
                ('owner', models.ForeignKey(to='core.Character')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterNotification',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('notificationID', models.IntegerField()),
                ('typeID', models.IntegerField()),
                ('senderID', models.IntegerField()),
                ('sentDate', models.DateTimeField()),
                ('read', models.BooleanField()),
                ('owner', models.ForeignKey(to='core.Character')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterSkill',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('typeID', models.IntegerField()),
                ('skillpoints', models.IntegerField()),
                ('level', models.IntegerField()),
                ('owner', models.ForeignKey(to='core.Character')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterTitle',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('titleID', models.IntegerField()),
                ('titleName', models.CharField(max_length=100)),
                ('owner', models.ForeignKey(to='core.Character')),
            ],
        ),
        migrations.CreateModel(
            name='ContractItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('recordID', models.IntegerField()),
                ('typeID', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('singleton', models.BooleanField()),
                ('included', models.BooleanField()),
                ('contract', models.ForeignKey(to='core.CharacterContract')),
            ],
        ),
        migrations.CreateModel(
            name='CorpContact',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('contactID', models.IntegerField()),
                ('contactName', models.CharField(max_length=100)),
                ('contactStanding', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CorpMember',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('characterID', models.IntegerField()),
                ('characterName', models.CharField(max_length=100)),
                ('joinDate', models.DateTimeField()),
                ('title', models.CharField(max_length=200)),
                ('logonDate', models.DateTimeField()),
                ('logoffDate', models.DateTimeField()),
                ('locationID', models.IntegerField()),
                ('location', models.CharField(max_length=200)),
                ('shipTypeID', models.IntegerField()),
                ('roles', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CorpStarbase',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('itemID', models.IntegerField()),
                ('typeID', models.IntegerField()),
                ('locationID', models.IntegerField()),
                ('moonID', models.IntegerField()),
                ('state', models.IntegerField()),
                ('stateTimestamp', models.DateTimeField()),
                ('onlineTimestamp', models.DateTimeField()),
                ('standingOwnerID', models.IntegerField()),
                ('allowCorpMembers', models.BooleanField()),
                ('allowAllianceMembers', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='CorpStarbaseFuel',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('typeID', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('pos', models.ForeignKey(to='core.CorpStarbase')),
            ],
        ),
        migrations.CreateModel(
            name='KillmailAttackers',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('allianceID', models.IntegerField()),
                ('allianceName', models.CharField(max_length=100)),
                ('corporationID', models.IntegerField()),
                ('corporationName', models.CharField(max_length=100)),
                ('characterID', models.IntegerField()),
                ('characterName', models.CharField(max_length=100)),
                ('damageDone', models.IntegerField()),
                ('finalBlow', models.BooleanField()),
                ('shipTypeID', models.IntegerField()),
                ('weaponTypeID', models.IntegerField()),
                ('killmail', models.ForeignKey(to='core.CharacterKill')),
            ],
        ),
        migrations.CreateModel(
            name='KillmailItems',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('flag', models.IntegerField()),
                ('qtyDropped', models.IntegerField()),
                ('qtyDestroyed', models.IntegerField()),
                ('typeID', models.IntegerField()),
                ('singleton', models.IntegerField()),
                ('killmail', models.ForeignKey(to='core.CharacterKill')),
            ],
        ),
        migrations.CreateModel(
            name='MailBody',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('messageID', models.IntegerField()),
                ('body', models.CharField(max_length=8192)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('content', models.CharField(max_length=2048)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('cssClass', models.CharField(max_length=20)),
                ('targetGroup', models.ManyToManyField(to='auth.Group')),
                ('targetUsers', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationText',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('notificationID', models.IntegerField()),
                ('body', models.CharField(max_length=4096)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('squad', models.IntegerField(null=True)),
                ('mainChar', models.OneToOneField(null=True, to='core.Character')),
                ('user', models.OneToOneField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WalletJournal',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date', models.DateTimeField()),
                ('refID', models.IntegerField()),
                ('refTypeID', models.IntegerField()),
                ('ownerName1', models.CharField(max_length=100)),
                ('ownerID1', models.IntegerField()),
                ('ownerName2', models.CharField(max_length=100)),
                ('ownerID2', models.IntegerField()),
                ('argName1', models.CharField(max_length=50)),
                ('argID1', models.IntegerField()),
                ('amount', models.FloatField()),
                ('balance', models.FloatField()),
                ('reason', models.CharField(max_length=200)),
                ('owner', models.ForeignKey(to='core.Character')),
            ],
        ),
        migrations.CreateModel(
            name='WalletTransactions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('transactionDateTime', models.DateTimeField()),
                ('transactionID', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('typeName', models.CharField(max_length=100)),
                ('typeID', models.IntegerField()),
                ('price', models.IntegerField()),
                ('clientID', models.IntegerField()),
                ('clientName', models.CharField(max_length=100)),
                ('stationID', models.IntegerField()),
                ('stationName', models.CharField(max_length=200)),
                ('transactionType', models.CharField(max_length=5)),
                ('transactionFor', models.CharField(max_length=15)),
                ('journalTransactionID', models.IntegerField()),
                ('owner', models.ForeignKey(to='core.Character')),
            ],
        ),
        migrations.AddField(
            model_name='character',
            name='profile',
            field=models.ForeignKey(to='core.UserProfile'),
        ),
        migrations.AddField(
            model_name='cachetimer',
            name='targetCharacter',
            field=models.ForeignKey(to='core.Character', null=True),
        ),
        migrations.AddField(
            model_name='cachetimer',
            name='targetKey',
            field=models.ForeignKey(to='core.ApiKey', null=True),
        ),
        migrations.AddField(
            model_name='apikey',
            name='profile',
            field=models.ForeignKey(to='core.UserProfile'),
        ),
    ]
